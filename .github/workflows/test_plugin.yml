name: Test riogisoffline plugin

on:
  push:
    branches:
      - "**"
jobs:
  tests:
    runs-on: ubuntu-latest
    container:
      image: qgis/qgis:${{ matrix.qgis-tags }}
    strategy:
      matrix:
        qgis-tags: [ release-3_34, latest ]
      fail-fast: false
      
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        run: |
          # Add Docker's official GPG key:
          apt-get update
          apt-get install -y curl
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          chmod a+r /etc/apt/keyrings/docker.asc
          
          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
      - name: Install Docker
        run: apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Test Docker
        run: docker run hello-world
      - name: Docker Pull qgis image
        run: docker pull qgis/qgis:${{ matrix.qgis-tags }}
      - name: List files and directories
        run: |
          echo "List current directory"
          echo `pwd`
          ls $(pwd) -a
          echo "Make dir"
          mkdir /app
          mkdir /app/test_riogisoffline
          mkdir /app/riogisoffline
          cp -r test_riogisoffline /app/test_riogisoffline
          cp -r riogisoffline /app/riogisoffline
          ls /app -a
          cd /app
          echo "List docker directory"
          docker run --mount=type=cache,source=/__w/riogisoffline/riogisoffline,target=/app -w /app qgis/qgis:${{ matrix.qgis-tags }} sh -c "ls -a && ls /app -a && echo `pwd`"
      - name: Run tests
        env:
          QGIS_IN_CI: 1
        run: docker run --mount type=bind,source=./,target=/app -w /app qgis/qgis:${{ matrix.qgis-tags }} sh -c "python3 -m pip install -qr /app/test_riogisoffline/requirements.test.txt && xvfb-run -s '+extension GLX -screen 0 1024x768x24' pytest -v --cov=riogisoffline --cov-report=xml test_riogisoffline"

      # Upload coverage report. Will not work if the repo is private
      - name: Upload coverage to Codecov
        if: ${{ matrix.qgis-tags == 'latest' && !github.event.repository.private }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: pytest
          fail_ci_if_error: false # set to true when upload is working
          verbose: false

  #code-style:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v4
  #    - uses: actions/setup-python@v4
  #    - uses: pre-commit/action@v3.0.0
